class StudyName():
    ALLEVIATE = 'ALLEVIATE'
    AS_Progression = 'AS Progression'
    Bioresource = 'Bioresource'
    BME_COVID = 'BME COVID'
    BRAVE = 'BRAVE'
    Breathe_Deep = 'Breathe Deep'
    Breathlessness = 'Breathlessness'
    BRICCS = 'BRICCS'
    BRICCS_CT = 'BRICCS_CT'
    CAE = 'CAE'
    CARDIOMET = 'CARDIOMET'
    CARMER_BREATH = 'CARMER BREATH'
    CHABLIS = 'CHABLIS'
    CIA = 'CIA'
    CMR_Guide = 'CMR Guide'
    CMR_vs_CTFFR = 'CMR vs CT-FFR'
    COHERE = 'COHERE'
    COPD_COVID_19 = 'COPD_COVID_19'
    COPD_INTROL = 'COPD INTROL'
    CTO = 'CTO'
    CVLPRIT = 'CVLPRIT'
    Dal_Gene = 'Dal-Gene'
    DESMOND = 'DESMOND'
    DHF = 'DHF'
    DISCORDANCE = 'DISCORDANCE'
    DREAM = 'DREAM'
    EASY_AS = 'EASY AS'
    EDEN = 'EDEN'
    EDIFY = 'EDIFY'
    ELASTIC_AS = 'ELASTIC-AS'
    EPIGENE1 = 'EPIGENE1'
    EXTEND = 'EXTEND'
    FAST = 'FAST'
    FOAMI = 'FOAMI'
    FORECAST_BRICCSCT_ORFAN_SCREENING = 'FORECAST BRICCSCT ORFAN SCREENING'
    GENVASC = 'GENVASC'
    Global_Views = 'Global_Views'
    GO_DCM = 'GO-DCM'
    GRAPHIC2 = 'GRAPHIC2'
    HAD = 'HAD'
    Heart_Failure_Screening = 'Heart Failure Screening'
    HIC_COVID_19 = 'HIC Covid 19'
    Indapamide = 'Indapamide'
    INTERFIELD = 'INTERFIELD'
    INTERVAL = 'INTERVAL'
    LENTEN = 'LENTEN'
    LIMb = 'LIMb'
    MARI = 'MARI'
    MCCANN_IMAGING = 'MCCANN_IMAGING'
    MEL = 'MEL'
    MERMAID = 'MERMAID'
    MI_ECMO = 'MI-ECMO'
    MINERVA = 'MINERVA'
    MRP_HFPEF = 'MRP_HFPEF'
    Multi_Morbid_Priorities = 'Multi Morbid Priorities'
    NON_ADHERENCE = 'NON_ADHERENCE'
    NOVO5K = 'NOVO5K'
    PARC = 'PARC'
    PHOSP_COVID19 = 'PHOSP_COVID19'
    Pilot = 'Pilot'
    PREDICT = 'PREDICT'
    Pre_Eclampsia = 'Pre-Eclampsia'
    RAPID_NSTEMI = 'RAPID_NSTEMI'
    RECHARGE = 'RECHARGE'
    REST = 'REST'
    SALT = 'SALT'
    SCAD = 'SCAD'
    SKOPE = 'SKOPE'
    SPACE_FOR_COPD = 'SPACE_FOR_COPD'
    SPIRAL = 'SPIRAL'
    TMAO = 'TMAO'
    UHL_HCW_COVID_19 = 'UHL_HCW_COVID_19'
    Upfor5 = 'Upfor5'
    VasCeGenS = 'VasCeGenS'
    YAKULT = 'YAKULT'
    YOGA = 'YOGA'

    def all_studies(self):
        return [getattr(self, f) for f in dir(self) if not callable(getattr(self,f)) and not f.startswith('__')]